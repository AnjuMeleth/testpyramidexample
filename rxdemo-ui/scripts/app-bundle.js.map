{"version":3,"sources":["Rx.js","RxHttpAPI.js","app.js","environment.js","main.js","resources/index.js"],"names":["Rx","drug","doseAmount","doseUnit","route","frequency","duration","RxHttpAPI","http","configure","config","withBaseUrl","sendRx","rx","console","log","fetch","method","body","getDrugs","App","rxApi","warningMessage","currentRx","validRx","submitRx","selectedDrug","then","response","json","loadDrugs","availableDrugs","attached","debug","testing","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;MAAaA,aAAAA,KAQX,cAAc;AAAA;;AACZ,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;;;;;;;;;;;;;;;;;MCVUC,oBAAAA,oBADZ;AAGC,uBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,WAAKC,SAAL,CAAe,kBAAU;AACvBC,eAAOC,WAAP,CAAmB,wBAAnB;AACD,OAFD;AAGA,WAAKH,IAAL,GAAYA,IAAZ;AACD;;wBAEDI,yBAAOC,IAAI;AACTC,cAAQC,GAAR,CAAY,4BAAZ;AACA,aAAO,KAAKP,IAAL,CAAUQ,KAAV,CAAgB,IAAhB,EAAsB;AAC3BC,gBAAQ,MADmB;AAE3BC,cAAM,8BAAKL,EAAL;AAFqB,OAAtB,CAAP;AAID;;wBAEDM,+BAAW;AACTL,cAAQC,GAAR,CAAY,8CAAZ;AACA,aAAO,KAAKP,IAAL,CAAUQ,KAAV,CAAgB,OAAhB,EAAyB;AAC9BC,gBAAQ;AADsB,OAAzB,CAAP;AAGD;;;;;;;;;;;;;;;;;;;;;MCrBUG,cAAAA,cADZ;AAQC,iBAAYC,KAAZ,EAAmB;AAAA;;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKC,cAAL,GAAsB,MAAtB;AACA,WAAKC,SAAL,GAAiB,YAAjB;AACD;;kBAEDC,6BAAU;AACR,aAAO,IAAP;AACD;;kBAEDC,+BAAW;AACTX,cAAQC,GAAR,CAAY,eAAZ;AACAD,cAAQC,GAAR,CAAY,oBAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKW,YAAjB;AACA,WAAKL,KAAL,CAAWT,MAAX,CAAkB,KAAKW,SAAvB,EACGI,IADH,CACQ;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OADR,EAEGF,IAFH,CAEQ,oBAAY;AAChBb,gBAAQC,GAAR,CAAYa,QAAZ;AACD,OAJH;AAKD;;kBAEDE,iCAAY;AAAA;;AACV,WAAKT,KAAL,CAAWF,QAAX,GAAsBQ,IAAtB,CAA2B;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OAA3B,EAAwDF,IAAxD,CAA6D,oBAAY;AACvEb,gBAAQC,GAAR,CAAYa,QAAZ;AACA,cAAKG,cAAL,GAAsBH,QAAtB;AACD,OAHD;AAID;;kBAEDI,+BAAW;AACTlB,cAAQC,GAAR,CAAY,4BAAZ;AACA,WAAKe,SAAL;AACD;;;;;;;;;;;oBC5CY;AACbG,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCzB,YAAAA;;;;;;;;;;AANhB0B,UAAQzB,MAAR,CAAe;AACb0B,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAAS5B,SAAT,CAAmB6B,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYR,KAAhB,EAAuB;AACrBK,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYR,OAAhB,EAAyB;AACvBI,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBjB,IAAhB,CAAqB;AAAA,aAAMW,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBepC,YAAAA;AAAT,WAASA,SAAT,CAAmBC,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class Rx {\n  drug;\n  doseAmount;\n  doseUnit;\n  route;\n  frequency;\n  duration;\n\n  constructor() {\n    this.drug = {};\n    this.doseAmount = \"\";\n    this.doseUnit = \"\";\n    this.route = \"\";\n    this.frequency = \"\";\n    this.duration = \"\";\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n\n@inject(HttpClient)\nexport class RxHttpAPI {\n\n  constructor(http) {\n    http.configure(config => {\n      config.withBaseUrl(\"http://localhost:4567/\");\n    });\n    this.http = http;\n  }\n\n  sendRx(rx) {\n    console.log(\"Submitting Rx to server...\");\n    return this.http.fetch(\"rx\", {\n      method: \"post\",\n      body: json(rx)\n    });\n  }\n\n  getDrugs() {\n    console.log(\"Retrieving prescribable drugs from server...\");\n    return this.http.fetch(\"drugs\", {\n      method: \"get\"\n    });\n  }\n\n}\n","import {RxHttpAPI} from \"./RxHttpAPI\";\nimport {Rx} from \"Rx\";\nimport {inject} from 'aurelia-framework';\n\n\n@inject(RxHttpAPI)\nexport class App {\n\n  currentRx;\n  warningMessage;\n  availableDrugs;\n  selectedDrug;\n\n  constructor(rxApi) {\n    this.rxApi = rxApi;\n    this.warningMessage = \"Test\";\n    this.currentRx = new Rx();\n  }\n\n  validRx() {\n    return true;\n  }\n\n  submitRx() {\n    console.log(\"Submitting Rx\");\n    console.log(\"Selected drug is: \");\n    console.log(this.selectedDrug);\n    this.rxApi.sendRx(this.currentRx)\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n      });\n  }\n\n  loadDrugs() {\n    this.rxApi.getDrugs().then(response => response.json()).then(response => {\n      console.log(response);\n      this.availableDrugs = response;\n    });\n  }\n\n  attached() {\n    console.log(\"view model attached to dom\");\n    this.loadDrugs();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}