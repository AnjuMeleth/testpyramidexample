{"version":3,"sources":["Rx.js","RxHttpAPI.js","app.js","environment.js","main.js","resources/index.js"],"names":["Rx","medication","doseAmount","doseUnit","route","frequency","duration","RxHttpAPI","http","configure","config","withBaseUrl","sendRx","rx","console","log","fetch","method","body","App","rxApi","message","warningMessage","currentRx","validRx","submitRx","then","response","json","debug","testing","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;MAAaA,aAAAA,KAQX,cAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;;;;;;;;;;;;;;;;;MCVUC,oBAAAA,oBADZ;AAGC,uBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,WAAKC,SAAL,CAAe,kBAAU;AACvBC,eAAOC,WAAP,CAAmB,wBAAnB;AACD,OAFD;AAGA,WAAKH,IAAL,GAAYA,IAAZ;AACD;;wBAEDI,yBAAOC,IAAI;AACTC,cAAQC,GAAR,CAAY,4BAAZ;AACA,aAAO,KAAKP,IAAL,CAAUQ,KAAV,CAAgB,IAAhB,EAAsB;AAC3BC,gBAAQ,MADmB;AAE3BC,cAAM,8BAAKL,EAAL;AAFqB,OAAtB,CAAP;AAID;;;;;;;;;;;;;;;;;;;;;MCdUM,cAAAA,cADZ;AAMC,iBAAYC,KAAZ,EAAmB;AAAA;;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAe,SAAf;AACA,WAAKC,cAAL,GAAsB,MAAtB;AACA,WAAKC,SAAL,GAAiB,YAAjB;AACA,WAAKA,SAAL,CAAepB,QAAf,GAA0B,WAA1B;AACA,WAAKoB,SAAL,CAAerB,UAAf,GAA4B,aAA5B;AACA,WAAKqB,SAAL,CAAenB,KAAf,GAAuB,OAAvB;AACA,WAAKmB,SAAL,CAAelB,SAAf,GAA2B,WAA3B;AACA,WAAKkB,SAAL,CAAejB,QAAf,GAA0B,UAA1B;AACD;;kBAEDkB,6BAAU;AACR,aAAO,IAAP;AACD;;kBAEDC,+BAAW;AACTX,cAAQC,GAAR,CAAY,eAAZ;AACA,WAAKK,KAAL,CAAWR,MAAX,CAAkB,KAAKW,SAAvB,EACGG,IADH,CACQ;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OADR,EAEGF,IAFH,CAEQ,oBAAY;AAChBZ,gBAAQC,GAAR,CAAYY,QAAZ;AACD,OAJH;AAKD;;;;;;;;;;;oBClCY;AACbE,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCrB,YAAAA;;;;;;;;;;AANhBsB,UAAQrB,MAAR,CAAe;AACbsB,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASxB,SAAT,CAAmByB,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYR,KAAhB,EAAuB;AACrBK,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYR,OAAhB,EAAyB;AACvBI,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBd,IAAhB,CAAqB;AAAA,aAAMQ,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCvBehC,YAAAA;AAAT,WAASA,SAAT,CAAmBC,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class Rx {\n  medication;\n  doseAmount;\n  doseUnit;\n  route;\n  frequency;\n  duration;\n\n  constructor() {\n    this.medication = \"\";\n    this.doseAmount = \"\";\n    this.doseUnit = \"\";\n    this.route = \"\";\n    this.frequency = \"\";\n    this.duration = \"\";\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n\n@inject(HttpClient)\nexport class RxHttpAPI {\n\n  constructor(http) {\n    http.configure(config => {\n      config.withBaseUrl(\"http://localhost:4567/\");\n    });\n    this.http = http;\n  }\n\n  sendRx(rx) {\n    console.log(\"Submitting Rx to server...\");\n    return this.http.fetch(\"rx\", {\n      method: \"post\",\n      body: json(rx)\n    });\n  }\n\n}\n","import {RxHttpAPI} from \"./RxHttpAPI\";\nimport {Rx} from \"Rx\";\nimport {inject} from 'aurelia-framework';\n\n\n@inject(RxHttpAPI)\nexport class App {\n\n  currentRx;\n  meesage;\n\n  constructor(rxApi) {\n    this.rxApi = rxApi;\n    this.message = 'Rx Demo';\n    this.warningMessage = \"Test\";\n    this.currentRx = new Rx();\n    this.currentRx.doseUnit = \"dose unit\";\n    this.currentRx.doseAmount = \"dose amount\";\n    this.currentRx.route = \"route\";\n    this.currentRx.frequency = \"frequency\";\n    this.currentRx.duration = \"duration\";\n  }\n\n  validRx() {\n    return true;\n  }\n\n  submitRx() {\n    console.log(\"Submitting Rx\");\n    this.rxApi.sendRx(this.currentRx)\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n      });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}